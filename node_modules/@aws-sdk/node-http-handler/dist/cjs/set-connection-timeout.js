"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setConnectionTimeout = void 0;
function setConnectionTimeout(request, reject, timeoutInMs = 0) {
    if (!timeoutInMs) {
        return;
    }
    request.on("socket", function (socket) {
        if (socket.connecting) {
            // Throw a connecting timeout error unless a connection is made within x time
            const timeoutId = setTimeout(() => {
                // abort the request to destroy it
                this.abort();
                const timeoutError = new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`);
                timeoutError.name = "TimeoutError";
                reject(timeoutError);
            }, timeoutInMs);
            // if the connection was established, cancel the timeout
            socket.on("connect", () => {
                clearTimeout(timeoutId);
            });
        }
    });
}
exports.setConnectionTimeout = setConnectionTimeout;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWNvbm5lY3Rpb24tdGltZW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXQtY29ubmVjdGlvbi10aW1lb3V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLFNBQWdCLG9CQUFvQixDQUFDLE9BQXNCLEVBQUUsTUFBNEIsRUFBRSxXQUFXLEdBQUcsQ0FBQztJQUN4RyxJQUFJLENBQUMsV0FBVyxFQUFFO1FBQ2hCLE9BQU87S0FDUjtJQUVELE9BQU8sQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFVBQStCLE1BQWM7UUFDaEUsSUFBSSxNQUFNLENBQUMsVUFBVSxFQUFFO1lBQ3JCLDZFQUE2RTtZQUM3RSxNQUFNLFNBQVMsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNoQyxrQ0FBa0M7Z0JBQ2xDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFFYixNQUFNLFlBQVksR0FBRyxJQUFJLEtBQUssQ0FBQyw2REFBNkQsV0FBVyxLQUFLLENBQUMsQ0FBQztnQkFDOUcsWUFBWSxDQUFDLElBQUksR0FBRyxjQUFjLENBQUM7Z0JBQ25DLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN2QixDQUFDLEVBQUUsV0FBVyxDQUFDLENBQUM7WUFFaEIsd0RBQXdEO1lBQ3hELE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtnQkFDeEIsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzFCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUF2QkQsb0RBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xpZW50UmVxdWVzdCB9IGZyb20gXCJodHRwXCI7XG5pbXBvcnQgeyBTb2NrZXQgfSBmcm9tIFwibmV0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRDb25uZWN0aW9uVGltZW91dChyZXF1ZXN0OiBDbGllbnRSZXF1ZXN0LCByZWplY3Q6IChlcnI6IEVycm9yKSA9PiB2b2lkLCB0aW1lb3V0SW5NcyA9IDApIHtcbiAgaWYgKCF0aW1lb3V0SW5Ncykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHJlcXVlc3Qub24oXCJzb2NrZXRcIiwgZnVuY3Rpb24gKHRoaXM6IENsaWVudFJlcXVlc3QsIHNvY2tldDogU29ja2V0KSB7XG4gICAgaWYgKHNvY2tldC5jb25uZWN0aW5nKSB7XG4gICAgICAvLyBUaHJvdyBhIGNvbm5lY3RpbmcgdGltZW91dCBlcnJvciB1bmxlc3MgYSBjb25uZWN0aW9uIGlzIG1hZGUgd2l0aGluIHggdGltZVxuICAgICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIC8vIGFib3J0IHRoZSByZXF1ZXN0IHRvIGRlc3Ryb3kgaXRcbiAgICAgICAgdGhpcy5hYm9ydCgpO1xuXG4gICAgICAgIGNvbnN0IHRpbWVvdXRFcnJvciA9IG5ldyBFcnJvcihgU29ja2V0IHRpbWVkIG91dCB3aXRob3V0IGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gd2l0aGluICR7dGltZW91dEluTXN9IG1zYCk7XG4gICAgICAgIHRpbWVvdXRFcnJvci5uYW1lID0gXCJUaW1lb3V0RXJyb3JcIjtcbiAgICAgICAgcmVqZWN0KHRpbWVvdXRFcnJvcik7XG4gICAgICB9LCB0aW1lb3V0SW5Ncyk7XG5cbiAgICAgIC8vIGlmIHRoZSBjb25uZWN0aW9uIHdhcyBlc3RhYmxpc2hlZCwgY2FuY2VsIHRoZSB0aW1lb3V0XG4gICAgICBzb2NrZXQub24oXCJjb25uZWN0XCIsICgpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuIl19